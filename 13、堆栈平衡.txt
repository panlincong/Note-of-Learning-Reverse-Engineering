1、堆栈平衡
顾名思义，堆栈平衡就是在用堆栈之前，堆栈是什么样的，用之后堆栈要还原成用之前的样子，即esp的值要还原成使用这个堆栈之前的值。
例如：
call 00401036
地址编号00401036: push 0x4
		  push 0x5
		  add esp, 8
		  retn
这里call命令执行前，esp的值假设为D018FF84,那么我们要保证执行完call后，ESP的值依然是D018FF84，因为我们往堆栈里存了2个值，一个4，一个5，
占用了2个堆栈单元，而堆栈的内存单元是以字为单位的，而字的宽度取决于操作系统的位数，这里是32位操作系统，所以字就是32位，即4个字节，所以，
堆栈的的数据操作以4个字节位基本单位，例如堆栈中0x00ff8810的上一个地址编号就是0x00ff8814，加4个字节，这里用了2个堆栈内存单元，所以要恢复堆栈
使用之前的状态，需要加8，让esp指向使用之前的位置D018FF84。
add esp，8
retn
可以简写为一条指令：retn 8
上面的指令也可以写成：
call 00401036
地址编号00401036: push 0x4
		  push 0x5
		  retn 8
效果一样
还可以在call指令执行完后，在后面add esp，8
例如：
call 00401036
add esp，8
地址编号00401036: push 0x4
		  push 0x5
		  retn
效果一样。

不管哪种方法，都是为了esp能恢复到堆栈使用之前的值