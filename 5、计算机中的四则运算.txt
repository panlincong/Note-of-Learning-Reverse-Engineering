1、计算机中的运算都是按位运算的，四则运算也不例外，所以，我们清楚移位的概念
汇编语言中移位用shl和shr分别表示左移和右移，移位运算也分有符号数和无符号数；
其中无符号数移位称为逻辑移位，而有符号数称为算术移位。
  逻辑移位：左移，低位补零；右移，高位补零；
  算术移位：如果是负数，左移低位补零；右移，高位补符号位。如果是正数，就和逻辑移位一样了，因为正数符号位为0。

2、计算机中的四则运算(计算机中其实只有位运算)
（这里的数据宽度都为1个字节，即8位）
（1）加法：
	按位相加，先进行异或，在进行与操作，判断是否有进位，如果与操作的结果不是0，则继续异或，然后再次与...重复这个过程，直到与操作结果为0。
  例如：4 + 5 = 9，我们这里数据字长假设为8位
	0000 0100
   异或 0000 0101
        _________
        0000 0001
     
    判断是否有进位
    与  0000 0100
	0000 0101
       ―――――――
	0000 0100
进行相与后的结果不为0，说明有进位，所以左移一位，因为进位作用于前面一位数，左移一位后，将第一次异或的值再次与左移一位后的相与值重复上面的过程：
    	0000 0001
   异或 0000 1000
        _________
        0000 1001
     
     判断是否有进位
    与  0000 0001
	0000 1000
       ―――――――
	0000 0000
这时候相与的值为0，所以没有进位，则异或的值即为加法运算的结果0000 1001换算成十进制就是9。
***我们可以知道，如果没有进位，则异或的值就是加法运算的值***。例如：
      2 + 5 = 7
	0000 0010
   异或 0000 0101
        _________
        0000 0111

    判断是否有进位
    与  0000 0010
	0000 0101
       ―――――――
	0000 0000
这时候相与的值为0，没有进位，所以异或的值就是加法运算的值，0000 0111换算成十进制就是7。
  （2）减法：
计算机中的减法也是通过加法来实现的，负数在计算机中用补码表示，而正数的补码和原码一样，所以，我们可以认为计算机进行运算时用的是补码
	2 - 3 = -1可以写成2 +（-3）= -1，通过加法来求值，-3先转换成原码1000 0011，再转化成补码1111 1101
	0000 0010
异或	1111 1101
	――――――
	1111 1111

        判断是否有进位
	0000 0010
相与	1111 1101
	――――――
	0000 0000
相与结果0，表示没有有进位，异或的结果就是运算的结果1111 1111，换算成十进制为-1，16进制FF
  （3）乘法：
乘法也可以用加法来做，例如 4 * 3 = 12，就是4个3相加或3个4相加，也是用加法来实现的
  （4）除法：
除法可以用减法来做，例如 4 / 2 = 2，可以理解为4最多可以减去多少个2，
以四则运算位基础，可以做任何复杂的运算。









	












