汇编中记住3个要点：寄存器，内存，指令，其中寄存器和内存都是容器，用来数据的读写！
1、32汇编和16位汇编
32位汇编的通用寄存器有EAX, EBX, ECX, EDX, EBP, ESP, ESI, EDI
16位汇编的通用寄存器有AX, BX, CX, DX, BP, SP, SI, DI
32位寄存器也可以作为2个独立的16位或4个独立的8位寄存器使用，例如 mov ax, 10h，把10h送到寄存器ax中，
但是只有eax，没有ax，这时候cpu就会把eax的低16位作为ax使用，同样的mov ah， 10h，cpu同样会把eax的8位
作为ah使用。
2、mov指令
mov指令的原操作数和目的操作数的数据宽度要一致，例如mov ax，10h，因为ax位16位寄存器，但是10h只有8位，所以
存到ax中时，高8位会自动补零，变为0010h；mov word ptr ds：[10h],1000h，这里把1000h送到内存地址为ds：[10h]的内存单元，
因为内存单元都是一块一块连续的，所以我们往内存单元里面存取数据时，一定要指定内存单元的大小，这里word ptr指定内存单元的宽度为word，即
2个字节。
mov指令的原操作数和目的操作数的类型可以是已下几种（这里的寄存器是通用寄存器）： 
mov 寄存器，寄存器
mov 寄存器，立即数
mov 寄存器，内存地址
mov 内存地址，寄存器
mov 内存地址，立即数（即数字）
内存地址和寄存器之间可以相互存取数据，但是内存和内存之间一般不可以，不过有少数指令也可以进行内存间的数据读取（例如movs）。